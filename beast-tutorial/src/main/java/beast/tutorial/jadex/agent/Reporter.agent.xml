<?xml version="1.0" encoding="UTF-8"?>
<agent xmlns="http://jadex.sourceforge.net/jadex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="Reporter" package="beast.tutorial.jadex.agent">

	<imports>
		<import>jadex.base.fipa.*</import>
		<import>jadex.commons.*</import>
		<import>jadex.bridge.service.*</import>
		<import>jadex.commons.future.*</import>
		<import>java.util.*</import>
		<import>java.util.logging.*</import>
		<import>beast.tutorial.model.*</import>
		<import>beast.tutorial.jadex.agent.*</import>
	</imports>

	<capabilities>
		<capability name="dfcap" file="jadex.bdi.planlib.df.DF" />
	</capabilities>

	<beliefs>
		<belief name="stop" class="boolean">
			<fact>false</fact>
		</belief>
		<belief name="report" class="Report"/>
		<belief name="createdIssueReport" class="boolean"/>
	</beliefs>

	<goals>
		<achievegoal name="live">
			<dropcondition>$beliefbase.stop</dropcondition>
		</achievegoal>
	</goals>

	<plans>
		<plan name="survive">
			<body class="ReceiveNotificationPlan" />
			<trigger>
				<messageevent ref="notification_msg"/>
			</trigger>
		</plan>

	</plans>

	<events>
		<messageevent name="notification_msg" type="fipa" direction="receive">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
	</events>


	<properties>
		<!--<property name="logging.level">java.util.logging.Level.FINE</property> -->
		<property name="debugging">false</property>
		<property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(),
			IDF.class, RequiredServiceInfo.SCOPE_PLATFORM)
		</property>
	</properties>

	<configurations>
		<configuration name="default">
			<goals>
				<!-- Create initial goals. -->
				<initialgoal cref="dfcap.df_register">
					<parameter ref="description">
						<value>
							$properties.dfservice.createDFComponentDescription(null,
							$properties.dfservice.createDFServiceDescription("report-service",
							"server", "ReporterAgent"))
						</value>
					</parameter>
				</initialgoal>
				<initialgoal ref="live" />
				<endgoal cref="dfcap.df_deregister" />
			</goals>
		</configuration>
	</configurations>

</agent>
	